# 11057. 오르막 수

# 1. 자릿수가 1인 것부터 오르막 수의 규칙(1의 자릿수로 갈 수록 숫자가 증가한다) 적용
# 2. 마지막 수가 j인 i자릿수의 개수를 구해가며 j는 9 i는 N이 될 때까지 반복한다.
# 3. 마지막 수가 j인 i자릿수의 개수는 j-1로 끝나는 i자릿수의 개수 + j로 끝나는 i-1 자릿수의 개수이다
# 4. 마지막 수가 j인 i자릿수의 개수를 10007로 나누어준다.
# 5. 마지막 수가 0부터 9까지인 N자릿수를 모두 더해준다

# 자릿수 입력
N = int(input())

# 값을 저장할 DP 2차원 배열
# 1자릿수는 모두 1이고 마지막 수가 0인 i자릿수 또한 1이므로 초깃값 1
DP = [[1]*10 for _ in range(N)]

# 자릿수는 2자릿수부터 N자릿수까지
for i in range(1, N):
    # 마지막 수가 2부터 9까지 
    for j in range(1, 10):
        DP[i][j] = DP[i][j-1] + DP[i-1][j]
        DP[i][j] %= 10007

# 모두 더한 값을 10007로 나누어준다.
print(sum(DP[N-1])%10007)