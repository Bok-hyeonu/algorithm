# 11060. 점프점프

# 1. 각 지점까지 도달하기 위한 최소 점프횟수 배열을 생성
# 2. 시작 지점은 0회
# 3. 이전에 점프로 방문할 수 있는 지점만 탐색 가능
# 4. 이전에 방문할 수 있는 지점인 경우 
# 해당 지점에서 점프할 수 있는 칸 수만큼 반복하며 최소 점프횟수를 갱신
# 5. 마지막 지점에서의 점프횟수를 출력

N = int(input())
board = list(map(int, input().split()))
DP = [-1]*(N)       # 해당 지점까지 최소 점프횟수

DP[0] = 0           # 첫 번째 지점은 시작 지점.(점프횟수 0회)
for i in range(N):
    # 이전에 방문할 수 없는 지점인 경우 탐색 X
    if DP[i] == -1:
        continue
    # 방문 가능한 지점인 경우
    for j in range(i + 1, min(i + board[i] + 1, N)):
        # 이전에 방문한 적이 없는 경우
        if DP[j] == -1:
            DP[j] = DP[i] + 1
        # 이전에 방문한 적이 있는 경우
        else:
            DP[j] = min(DP[j], DP[i] + 1)

print(DP[N-1])